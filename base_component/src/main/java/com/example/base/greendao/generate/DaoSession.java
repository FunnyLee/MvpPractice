package com.example.base.greendao.generate;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.base.greendao.entity.NewsChannel;
import com.example.base.greendao.entity.PictureChannel;
import com.example.base.greendao.entity.VideoChannel;

import com.example.base.greendao.generate.NewsChannelDao;
import com.example.base.greendao.generate.PictureChannelDao;
import com.example.base.greendao.generate.VideoChannelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsChannelDaoConfig;
    private final DaoConfig pictureChannelDaoConfig;
    private final DaoConfig videoChannelDaoConfig;

    private final NewsChannelDao newsChannelDao;
    private final PictureChannelDao pictureChannelDao;
    private final VideoChannelDao videoChannelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsChannelDaoConfig = daoConfigMap.get(NewsChannelDao.class).clone();
        newsChannelDaoConfig.initIdentityScope(type);

        pictureChannelDaoConfig = daoConfigMap.get(PictureChannelDao.class).clone();
        pictureChannelDaoConfig.initIdentityScope(type);

        videoChannelDaoConfig = daoConfigMap.get(VideoChannelDao.class).clone();
        videoChannelDaoConfig.initIdentityScope(type);

        newsChannelDao = new NewsChannelDao(newsChannelDaoConfig, this);
        pictureChannelDao = new PictureChannelDao(pictureChannelDaoConfig, this);
        videoChannelDao = new VideoChannelDao(videoChannelDaoConfig, this);

        registerDao(NewsChannel.class, newsChannelDao);
        registerDao(PictureChannel.class, pictureChannelDao);
        registerDao(VideoChannel.class, videoChannelDao);
    }
    
    public void clear() {
        newsChannelDaoConfig.clearIdentityScope();
        pictureChannelDaoConfig.clearIdentityScope();
        videoChannelDaoConfig.clearIdentityScope();
    }

    public NewsChannelDao getNewsChannelDao() {
        return newsChannelDao;
    }

    public PictureChannelDao getPictureChannelDao() {
        return pictureChannelDao;
    }

    public VideoChannelDao getVideoChannelDao() {
        return videoChannelDao;
    }

}
