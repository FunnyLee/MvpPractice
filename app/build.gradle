apply plugin: 'com.android.application'

def configInfo = rootProject.ext.android

android {
    compileSdkVersion configInfo.compileSdkVersion
    defaultConfig {
        applicationId configInfo.applicationId
        minSdkVersion configInfo.minSdkVersion
        targetSdkVersion configInfo.targetSdkVersion
        versionCode configInfo.versionCode
        versionName configInfo.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

        compileOptions {
            targetCompatibility JavaVersion.VERSION_1_8
            sourceCompatibility JavaVersion.VERSION_1_8
        }
    }

    signingConfigs {
        debug {
//            storeFile file("Funny.jks")
//            storePassword "123456"
//            keyAlias "Funny"
//            keyPassword "123456"
        }

        release {
            storeFile file("Funny.jks")
            storePassword "123456"
            keyAlias "Funny"
            keyPassword "123456"
        }
    }

    buildTypes {

        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    publishNonDefault true
    defaultPublishConfig "commonDebug"
    flavorDimensions("default")
    productFlavors {
        common {
            dimension "default"
            signingConfig signingConfigs.release
        }

        custom{
            dimension "default"
            signingConfig signingConfigs.release
        }
    }


    dexOptions {
//        incremental true
        javaMaxHeapSize "4g"
        preDexLibraries = false
        jumboMode = true
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apk/" + variant.flavorName)
            def fileName
            if (outputFile.name.contains("debug")) {
                fileName = "${configInfo.appName}_v${configInfo.versionName}_${getTime()}_debug"
            } else {
                fileName = "${configInfo.appName}_v${configInfo.versionName}_${getTime()}_release"
            }
            fileName += ".apk"
            outputFileName = fileName
        }
    }
}

static def getTime() {
    return new Date().format("M.d_HH.mm", TimeZone.getDefault())//包含时分
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(":base_component")
    implementation project(":base_resource")
    implementation project(":toutiao")
    implementation project(":wan_android")
}
